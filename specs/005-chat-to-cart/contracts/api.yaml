openapi: 3.0.3
info:
  title: Chat Product Card Cart Operations API
  description: API contracts for adding products to cart from chat product suggestions
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: https://api.example.com/api/v1
    description: Production server
  - url: http://localhost:8080/api/v1
    description: Development server

paths:
  /cart/add:
    post:
      summary: Add item to cart
      description: Adds a product (with optional variant) to the user's cart
      operationId: addToCart
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartRequest'
            examples:
              simple_product:
                value:
                  product_id: "123e4567-e89b-12d3-a456-426614174000"
                  quantity: 1
              variant_product:
                value:
                  product_id: "123e4567-e89b-12d3-a456-426614174000"
                  variant_id: "var-001"
                  quantity: 2
              guest_user:
                value:
                  product_id: "123e4567-e89b-12d3-a456-426614174000"
                  quantity: 1
                  session_id: "sess_abc123"
      responses:
        '200':
          description: Item successfully added to cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
              examples:
                success:
                  value:
                    success: true
                    cart:
                      id: "cart-123"
                      items:
                        - id: "item-001"
                          product_id: "123e4567-e89b-12d3-a456-426614174000"
                          quantity: 1
                          unit_price: 199.99
                          subtotal: 199.99
                          product_name: "Wireless Headphones"
                          created_at: "2024-12-26T10:00:00Z"
                      subtotal: 199.99
                      tax: 19.99
                      total: 219.98
                      created_at: "2024-12-26T10:00:00Z"
                      updated_at: "2024-12-26T10:00:00Z"
                    message: "Item added to cart"
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_product:
                  value:
                    success: false
                    error: "invalid_product"
                    message: "Product not found"
                invalid_variant:
                  value:
                    success: false
                    error: "invalid_variant"
                    message: "Selected variant does not exist for this product"
                invalid_quantity:
                  value:
                    success: false
                    error: "invalid_quantity"
                    message: "Quantity must be between 1 and 99"
        '409':
          description: Conflict - out of stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                out_of_stock:
                  value:
                    success: false
                    error: "out_of_stock"
                    message: "Selected item is out of stock"
        '401':
          description: Unauthorized - invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "unauthorized"
                message: "Invalid or expired session"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "server_error"
                message: "Internal server error"

  /cart/update:
    put:
      summary: Update cart item quantity
      description: Updates the quantity of an item in the cart. Set quantity to 0 to remove item.
      operationId: updateCartItem
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartRequest'
            examples:
              increase_quantity:
                value:
                  item_id: "item-001"
                  quantity: 3
              decrease_quantity:
                value:
                  item_id: "item-001"
                  quantity: 1
              remove_item:
                value:
                  item_id: "item-001"
                  quantity: 0
      responses:
        '200':
          description: Cart item successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Cart item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "not_found"
                message: "Cart item not found"
        '409':
          description: Conflict - insufficient inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cart:
    get:
      summary: Get current cart
      description: Retrieves the current user's cart (authenticated or guest)
      operationId: getCart
      tags:
        - Cart
      parameters:
        - name: session_id
          in: query
          description: Session ID for guest carts
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
              examples:
                empty_cart:
                  value:
                    success: true
                    cart: null
                    message: "Cart is empty"
                cart_with_items:
                  value:
                    success: true
                    cart:
                      id: "cart-123"
                      items:
                        - id: "item-001"
                          product_id: "123e4567-e89b-12d3-a456-426614174000"
                          quantity: 2
                          unit_price: 199.99
                          subtotal: 399.98
                          product_name: "Wireless Headphones"
                          created_at: "2024-12-26T10:00:00Z"
                          updated_at: "2024-12-26T10:00:00Z"
                      subtotal: 399.98
                      tax: 39.99
                      total: 439.97
                      created_at: "2024-12-26T10:00:00Z"
                      updated_at: "2024-12-26T10:00:00Z"
                    message: "Cart retrieved successfully"
        '401':
          description: Unauthorized - invalid session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AddToCartRequest:
      type: object
      required:
        - product_id
        - quantity
      properties:
        product_id:
          type: string
          format: uuid
          description: Product identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        variant_id:
          type: string
          format: uuid
          description: Product variant identifier (if applicable)
          example: "var-001"
        quantity:
          type: integer
          minimum: 1
          maximum: 99
          description: Quantity to add to cart
          example: 1
        session_id:
          type: string
          description: Session identifier for guest users
          example: "sess_abc123"
      additionalProperties: false

    UpdateCartRequest:
      type: object
      required:
        - item_id
        - quantity
      properties:
        item_id:
          type: string
          format: uuid
          description: Cart item identifier to update
          example: "item-001"
        quantity:
          type: integer
          minimum: 0
          maximum: 99
          description: New quantity (0 removes item from cart)
          example: 2
      additionalProperties: false

    CartResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          description: Operation success status
          example: true
        cart:
          $ref: '#/components/schemas/Cart'
          description: Updated cart object
        message:
          type: string
          description: Success or error message
          example: "Item added to cart"
      additionalProperties: false

    Cart:
      type: object
      required:
        - id
        - items
        - subtotal
        - tax
        - total
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Cart identifier
          example: "cart-123"
        user_id:
          type: string
          format: uuid
          description: User identifier (if authenticated)
          example: "user-123"
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          description: Items in cart
        subtotal:
          type: number
          format: decimal
          description: Subtotal before tax
          example: 199.99
        tax:
          type: number
          format: decimal
          description: Tax amount
          example: 19.99
        total:
          type: number
          format: decimal
          description: Total amount including tax
          example: 219.98
        created_at:
          type: string
          format: date-time
          description: Cart creation timestamp
          example: "2024-12-26T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Cart last update timestamp
          example: "2024-12-26T10:00:00Z"
        expires_at:
          type: string
          format: date-time
          description: Cart expiration (for guest carts)
          example: "2024-12-27T10:00:00Z"
      additionalProperties: false

    CartItem:
      type: object
      required:
        - id
        - product_id
        - quantity
        - unit_price
        - subtotal
        - product_name
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Cart item identifier
          example: "item-001"
        product_id:
          type: string
          format: uuid
          description: Product identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        variant_id:
          type: string
          format: uuid
          description: Variant identifier (if applicable)
          example: "var-001"
        quantity:
          type: integer
          minimum: 1
          description: Quantity in cart
          example: 2
        unit_price:
          type: number
          format: decimal
          description: Price per unit
          example: 199.99
        subtotal:
          type: number
          format: decimal
          description: Line item total (quantity * unit_price)
          example: 399.98
        product_name:
          type: string
          description: Cached product name
          example: "Wireless Headphones"
        product_image:
          type: string
          format: uri
          description: Cached product image URL
          example: "https://example.com/images/product.jpg"
        created_at:
          type: string
          format: date-time
          description: Item creation timestamp
          example: "2024-12-26T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Item last update timestamp
          example: "2024-12-26T10:00:00Z"
      additionalProperties: false

    ErrorResponse:
      type: object
      required:
        - success
        - error
        - message
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          enum:
            - network_error
            - out_of_stock
            - invalid_product
            - invalid_variant
            - invalid_quantity
            - quantity_exceeded
            - unauthorized
            - server_error
            - not_found
          description: Error type identifier
          example: "out_of_stock"
        message:
          type: string
          description: Human-readable error message
          example: "Selected item is out of stock"
        details:
          type: object
          description: Additional error details
          additionalProperties: true
      additionalProperties: false

  securitySchemes:
    SessionAuth:
      type: apiKey
      in: header
      name: X-Session-ID
      description: Session-based authentication for guest and authenticated users

security:
  - SessionAuth: []

tags:
  - name: Cart
    description: Shopping cart operations